{"version":3,"sources":["app/todo/components/task-list.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAaA;gBAMI,2BAAoB,YAAwB;oBAAxB,iBAAY,GAAZ,YAAY,CAAY;oBAF5C,YAAO,GAAG,KAAK,CAAC;gBAIhB,CAAC;gBAED,oCAAQ,GAAR;oBACI,IAAI,CAAC,kBAAkB,EAAE,CAAC;oBAC1B,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACtB,CAAC;gBAED,8CAAkB,GAAlB;oBACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,IAAI,EAAP,CAAO,CAAC,CAAC,MAAM,CAAC;gBACjE,CAAC;gBAED,yCAAa,GAAb;oBACI,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;gBACjC,CAAC;gBAED,yCAAa,GAAb;oBACI,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;wBACf,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAC3B,CAAC;oBACD,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,IAAI,EAAP,CAAO,CAAC,CAAC;gBAChD,CAAC;gBAED,kCAAM,GAAN,UAAO,IAAS;oBACZ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBAC7B,CAAC;gBAEO,oCAAQ,GAAhB;oBACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;gBACxC,CAAC;;gBA1CL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,WAAW;wBACrB,WAAW,EAAE,sCAAsC;wBACnD,SAAS,EAAE,CAAC,qCAAqC,CAAC;wBAClD,UAAU,EAAE,CAAC,0BAAiB,CAAC;qBAClC,CAAC;;qCAAA;gBAsCF,wBAAC;YAAD,CArCA,AAqCC,IAAA;YArCD,iDAqCC,CAAA","file":"app/todo/components/task-list.component.js","sourcesContent":["import {Component, OnInit} from \"angular2/core\";\r\nimport {Task} from \"../models/task\";\r\nimport {TaskService} from \"../services/task.service\";\r\nimport {ROUTER_DIRECTIVES} from \"angular2/router\";\r\n\r\ndeclare var $:any;\r\n\r\n@Component({\r\n    selector: 'task-list',\r\n    templateUrl: './app/todo/components/task-list.html',\r\n    styleUrls: ['./app/todo/components/task-list.css'],\r\n    directives: [ROUTER_DIRECTIVES]\r\n})\r\nexport class TaskListComponent implements OnInit {\r\n\r\n    todoCount:number;\r\n    selectedTask:Task;\r\n    showAll = false;\r\n\r\n    constructor(private _taskService:TaskService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.calculateTodoCount();\r\n        $.material.init();\r\n    }\r\n\r\n    calculateTodoCount() {\r\n        this.todoCount = this.getTasks().filter(t => !t.done).length;\r\n    }\r\n\r\n    toggleShowAll() {\r\n        this.showAll = !this.showAll;\r\n    }\r\n\r\n    filteredTasks():Task[] {\r\n        if (this.showAll) {\r\n            return this.getTasks();\r\n        }\r\n        return this.getTasks().filter(t => !t.done);\r\n    }\r\n\r\n    select(task:Task) {\r\n        this.selectedTask = task;\r\n    }\r\n\r\n    private getTasks() {\r\n        return this._taskService.getTasks();\r\n    };\r\n}"],"sourceRoot":"/source/"}