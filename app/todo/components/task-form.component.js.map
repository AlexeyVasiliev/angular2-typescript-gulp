{"version":3,"sources":["app/todo/components/task-form.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAWA;gBAKI,2BAAoB,OAAc,EACd,YAAwB,EACxB,YAAwB;oBAFxB,YAAO,GAAP,OAAO,CAAO;oBACd,iBAAY,GAAZ,YAAY,CAAY;oBACxB,iBAAY,GAAZ,YAAY,CAAY;oBAJ5C,UAAK,GAAW,IAAI,CAAC;oBAKjB,IAAI,EAAE,GAAU,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACxC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;wBACT,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;wBACxD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;oBACvB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,IAAI,CAAC,IAAI,GAAG,WAAI,CAAC,OAAO,EAAE,CAAC;wBAC3B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;oBACtB,CAAC;gBACL,CAAC;gBAED,oCAAQ,GAAR;oBACI,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACtB,CAAC;gBAED,0CAAc,GAAd;oBACI,MAAM,CAAC,WAAI,CAAC,cAAc,CAAC;gBAC/B,CAAC;gBAED,kCAAM,GAAN;oBACI,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC9B,CAAC;gBAED,kCAAM,GAAN;oBACI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC1C,IAAI,CAAC,kBAAkB,EAAE,CAAC;gBAC9B,CAAC;gBAEO,8CAAkB,GAA1B;oBACI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACxC,CAAC;;gBAzCL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,WAAW;wBACrB,WAAW,EAAE,sCAAsC;qBACtD,CAAC;;qCAAA;gBAuCF,wBAAC;YAAD,CAtCA,AAsCC,IAAA;YAtCD,iDAsCC,CAAA","file":"app/todo/components/task-form.component.js","sourcesContent":["import {Component, OnInit} from \"angular2/core\";\r\nimport {TaskService} from \"../services/task.service\";\r\nimport {Task} from \"../models/task\";\r\nimport {Router, RouteParams} from \"angular2/router\";\r\n\r\ndeclare var $:any;\r\n\r\n@Component({\r\n    selector: 'task-form',\r\n    templateUrl: './app/todo/components/task-form.html'\r\n})\r\nexport class TaskFormComponent implements OnInit {\r\n\r\n    task:Task;\r\n    isNew:boolean = true;\r\n\r\n    constructor(private _router:Router,\r\n                private _routeParams:RouteParams,\r\n                private _taskService:TaskService) {\r\n        let id:number = +_routeParams.get(\"id\");\r\n        if (id > 0) {\r\n            this.task = Object.assign({}, _taskService.getTask(id));\r\n            this.isNew = false;\r\n        } else {\r\n            this.task = Task.newTask();\r\n            this.isNew = true;\r\n        }\r\n    }\r\n\r\n    ngOnInit():any {\r\n        $.material.init();\r\n    }\r\n\r\n    availableLists():Array<string> {\r\n        return Task.availableLists;\r\n    }\r\n\r\n    cancel():void {\r\n        this.navigateToTaskList();\r\n    }\r\n\r\n    submit():void {\r\n        this._taskService.saveOrUpdate(this.task);\r\n        this.navigateToTaskList();\r\n    }\r\n\r\n    private navigateToTaskList() {\r\n        this._router.navigate(['TaskList']);\r\n    };\r\n}"],"sourceRoot":"/source/"}